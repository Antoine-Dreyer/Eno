<?xml version="1.0" encoding="UTF-8"?>
<project name="Quesaco" basedir="." default="full">
    <!-- On importe la partie configuration commune à tous les scripts -->
    <import file="build_configuration.xml"/>
    
    <!-- Propriétés script Capgemini -->
    <property name="nomEnquete" value="simpsons"/>
    <property name="dossierEnquete" value="${dossierRacine}/questionnaires/${nomEnquete}"/>    
    
    <!--************************TARGETS PRINCIPALES*****************************-->
    
    <!-- La première target principale qui peut être appelée -->
    <!-- On nettoie, on prétraite le DDI, on prétraite le générateur -->
    <target name="full" depends="clean, pretraitementDDI, pretraitementEno">
        <!-- Puis pour chaque fichier DDI déréférencé produit dans temp, on crée le XForms correspondant -->
        <foreach target="ddi2fr" param="fichier" inheritall="true">
            <path>
                <fileset dir="${temp.home}" includes="*-final.xml"/>
            </path>
        </foreach>
    </target>

	<!--************************TARGETS POUR GENERER UN QUESTIONNAIRE *****************************-->

    <!-- Il faut récupérer le mapping entre le VariableScheme et les identifiants côté QuestionScheme avant de lancer, d'où la dépendance -->
    <target name="ddi2fr">

        <basename file="${fichier}" property="nomFichier" suffix=".xml"/>
        <propertyregex property="nomFormulaire" input="${nomFichier}" regexp="-final" replace=""
            global="true"/>

        <!-- On génère le Xforms à partir du DDI -->
        <xslt in="${temp.home}/${nomFichier}.xml"
            out="${dossierEnquete}/Xforms/${nomFormulaire}/form/form-basique.xhtml"
            style="${xslt.home}/transformations/ddi2fr/ddi2fr.xsl" force="true"
            classpath="${saxon.jar}">
            <param name="campagne" expression="${nomEnquete}"/>
            <param name="modele" expression="${nomFormulaire}"/>
        </xslt>

        <!-- On rajoute la couche liée à la navigation du questionnaire -->
        <xslt
            in="${dossierEnquete}/Xforms/${nomFormulaire}/form/form-basique.xhtml"
            out="${dossierEnquete}/Xforms/${nomFormulaire}/form/form.xhtml"
            style="${xslt.home}/util/orbeon-form-runner/patron_et_navigation.xsl" force="true"
            classpath="${saxon.jar}">
            <param name="campagne" expression="${nomEnquete}"/>
            <param name="modele" expression="${nomFormulaire}"/>
        </xslt>
        
        <delete
            file="${dossierEnquete}/Xforms/${nomFormulaire}/form/form-basique.xhtml"/>

    </target>

    <!--************************TARGETS CONCERNANT LE PRETRAITEMENT ENO *****************************-->
    
    <target name="pretraitementEno">
        
        <!-- On génère les xsl -->
        <antcall target="fods2xsl">
            <param name="dir" value="${xslt.home}/transformations/ddi2fr"/>
            <param name="nom" value="drivers"/>
        </antcall>
        <antcall target="fods2xsl">
            <param name="dir" value="${xslt.home}/transformations/ddi2fr"/>
            <param name="nom" value="fonctions"/>
        </antcall>
        <antcall target="fods2xsl">
            <param name="dir" value="${xslt.home}/transformations/ddi2fr"/>
            <param name="nom" value="parcours"/>
        </antcall>
        <antcall target="fods2xsl">
            <param name="dir" value="${xslt.home}/entrees/ddi/"/>
            <param name="nom" value="fonctions"/>
        </antcall>
        <antcall target="fods2xsl">
            <param name="dir" value="${xslt.home}/entrees/ddi/"/>
            <param name="nom" value="templates"/>
        </antcall>
        
        <!-- Cela permet de générer des xsl mais qui n'est pas valide (pas de création dynamique des namespaces) -->
        
        
        <!-- On utilise une feuille du dossier util pour créer la feuille de passage du ddi au form-runner
      à partir de la feuille non générée et des feuilles générées:
      le contenu des feuilles est directement intégrée dans la première qui doit contenir les namespaces appropriés-->
        
        <xslt in="${xslt.home}/transformations/ddi2fr/ddi2fr-fixed.xsl" out="${temp.home}/temp.xsl"
            style="${xslt.home}/util/xsl/incorporation.xsl" force="true" classpath="${saxon.jar}">
            <param name="fichier_genere" expression="../../transformations/ddi2fr/drivers.xsl"/>
        </xslt>
        
        <xslt in="${temp.home}/temp.xsl" out="${temp.home}/tempBis.xsl"
            style="${xslt.home}/util/xsl/incorporation.xsl" force="true" classpath="${saxon.jar}">
            <param name="fichier_genere" expression="../../transformations/ddi2fr/fonctions.xsl"/>
        </xslt>
        
        <xslt in="${temp.home}/tempBis.xsl" out="${xslt.home}/transformations/ddi2fr/ddi2fr.xsl"
            style="${xslt.home}/util/xsl/incorporation.xsl" force="true" classpath="${saxon.jar}">
            <param name="fichier_genere" expression="../../transformations/ddi2fr/parcours.xsl"/>
        </xslt>
        
        <xslt in="${xslt.home}/entrees/ddi/source-fixed.xsl" out="${temp.home}/temp.xsl"
            style="${xslt.home}/util/xsl/incorporation.xsl" force="true" classpath="${saxon.jar}">
            <param name="fichier_genere" expression="../../entrees/ddi/fonctions.xsl"/>
        </xslt>
        
        <xslt in="${temp.home}/temp.xsl" out="${xslt.home}/entrees/ddi/source.xsl"
            style="${xslt.home}/util/xsl/incorporation.xsl" force="true" classpath="${saxon.jar}">
            <param name="fichier_genere" expression="../../entrees/ddi/templates.xsl"/>
        </xslt>
        
    </target>
    
    <!-- la tâche qui permet de passer d'un fods à une xsl -->
    <target name="fods2xsl">
        <!-- On préformate une matrice grâce une feuille du dossier util -->
        <xslt in="${dir}/${nom}.fods" out="${temp.home}/preformate.fods"
            style="${xslt.home}/util/fods/preformatage.xsl" force="true" classpath="${saxon.jar}"/>
        
        <!-- On passe du format fods au format xml grâce au générateur -->
        <xslt in="${temp.home}/preformate.fods" out="${temp.home}/xml.xml"
            style="${xslt.home}/transformations/fods2xml.xsl" force="true" classpath="${saxon.jar}"/>
        
        <!-- On passe du format xml au format xsl grâce au générateur -->
        <xslt in="${temp.home}/xml.xml" out="${dir}/${nom}.xsl"
            style="${xslt.home}/transformations/xml2xsl.xsl" force="true" classpath="${saxon.jar}"/>
    </target>
    
    <!--************************TARGETS CONCERNANT LE PRETRAITEMENT DU DDI *****************************-->

    <target name="pretraitementDDI">
        <!-- On déréférence -->
        <antcall target="dereferencement"/>
        <!-- Pour chaque fichier produit (un par modèle), on effectue un nettoyage -->
        <foreach target="nettoyage" param="fichier" inheritall="true">
            <path>
                <fileset dir="${temp.home}" excludes="*-dereference.xml"/>
            </path>
        </foreach>
        <!-- Puis on rajoute le titrage au fichier produit ci-dessus -->
        <foreach target="titrage" param="fichier" inheritall="true">
            <path>
                <fileset dir="${temp.home}" includes="*-nettoye.xml"/>
            </path>
        </foreach>
    </target>
    
    <!-- Le déréférencement -->
    <target name="dereferencement">
        
        <!-- Le QuestionScheme s'auto déréférence -->
        <xslt in="${xml.home}/dummy.xml"
            out="${temp.home}/${nomEnquete}-qb-dereference.xml"
            style="${xslt.home}/util/DDI/dereferencement.xsl" classpath="${saxon.jar}" force="true">
            <param name="fichier_principal"
                expression="${dossierEnquete}/DDI/${nomEnquete}-qb.xml"/>
            <param name="fichier_secondaire" expression="${dossierXml}/dummy.xml"/>
        </xslt>
        
        <!-- Le CCS se déréférence avec lui-même et le QuestionScheme déjà déréférencé -->
        <xslt in="${xml.home}/dummy.xml"
            out="${temp.home}/${nomEnquete}-ccs-dereference.xml"
            style="${xslt.home}/util/DDI/dereferencement.xsl" classpath="${saxon.jar}" force="true">
            <param name="fichier_principal"
                expression="${dossierEnquete}/DDI/${nomEnquete}-ccs.xml"/>
            <param name="fichier_secondaire"
                expression="${dossierTemp}/${nomEnquete}-qb-dereference.xml"/>
        </xslt>
        
        <!-- On crée un DDI déréférencé par modèle avec les fichiers déjà déréférencés et on ajoute certaines variables du VariableScheme au résultat -->
        <xslt in="${xml.home}/dummy.xml" out="${xml.home}/null.xml"
            style="${xslt.home}/util/DDI/dereferencement.xsl" classpath="${saxon.jar}" force="true">
            <param name="fichier_principal"
                expression="${dossierEnquete}/DDI/${nomEnquete}-su.xml"/>
            <param name="fichier_secondaire"
                expression="${dossierTemp}/${nomEnquete}-ccs-dereference.xml"/>
            <param name="fichier_variables"
                expression="${dossierEnquete}/DDI/${nomEnquete}-vs.xml"/>
            <param name="dossierSortie" expression="${dossierTemp}"/>
        </xslt>

    </target>    
    
    <target name="nettoyage" description="Nettoyage du DDI">
        <basename file="${fichier}" property="nomFichier" suffix=".xml"/>
        <xslt in="${temp.home}/${nomFichier}.xml" out="${temp.home}/${nomFichier}-nettoye.xml"
            style="${xslt.home}/util/DDI/nettoyage.xsl" classpath="${saxon.jar}" force="true"/>
    </target>
    
    <target name="titrage" description="Rajout de titres">
        <basename file="${fichier}" property="nomFichier" suffix=".xml"/>
        <propertyregex property="nomSortie" input="${nomFichier}" regexp="-nettoye" replace=""
            global="true"/>
        <xslt in="${temp.home}/${nomFichier}.xml" out="${temp.home}/${nomSortie}-final.xml"
            style="${xslt.home}/util/DDI/titrage.xsl" classpath="${saxon.jar}" force="true">
            <param name="fichier_parametrage"
                expression="${dossierEnquete}/parametres.xml"/>
        </xslt>
    </target> 
    
    
    <!--************************TARGETS POUR NETTOYER LES REPERTOIRES*****************************-->
    <!-- On nettoie le dossier questionnaire -->
    <target name="cleanQuestionnaire">
        <delete>
            <fileset dir="${dossierEnquete}/Xforms/" includes="**/*"/>
        </delete>
    </target>
    <!-- On nettoie tout -->
    <target name="clean">
        <delete>
            <fileset dir="${temp.home}/" includes="**/*"/>
        </delete>
        <antcall target="cleanQuestionnaire"/>
    </target>
    
	<!--************************TARGETS WITH NON REGRESSION TEST *****************************-->

	<!-- The full target with non regression tests calculate the difference with the generated Xforms Simpsons questionnaire expected -->
    <target name="full-with-test" depends="compile-tests,full">

        <!-- At the end of the treatment, the difference between the generated and the expected form written in the file diff.txt-->
       <java 
       		classname="fr.insee.eno.test.Difference"
           	fork="true"
           >
         <!-- the output file with differences -->
         <arg value="${dossierEnquete}/Xforms/v1/form/diff.txt"/>
         <!-- the input generated form to compare -->
         <arg value="${dossierEnquete}/Xforms/v1/form/form.xhtml"/>
         <!-- the expected form -->
         <arg value="${dossierEnquete}/form.xhtml"/>
         <classpath refid="classpath"/>
       </java>
       <delete dir="${lib.home}/target" />
    </target>

    <!-- Classes compilation for tests -->
	<target name="compile-tests">
		<mkdir dir="${lib.home}/target" /> 
		<javac srcdir="${test.java.home}/fr/insee/eno/test"
			destdir="${lib.home}/target">
			 <classpath refid="classpath"/>
		</javac>
	</target>


</project>